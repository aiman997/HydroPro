version: '3'

services:
 flaskapp:
   build: ./web
   restart: always
   expose:
     - "8000"
   volumes:
     - ./web:/home/flask/app/web
   depends_on:
     - redis
     - postgres
   links:
     - redis
     - postgres
   environment:
     FLASK_DEBUG: 1
   deploy:
     mode: replicated
     replicas: 1

 redis:
   image: redis:alpine
   restart: always
   deploy:
     mode: replicated
     replicas: 1

 ds:
   build: ./datasource
   restart: always
   expose:
     - "8001"
   volumes:
     - ./datasource:/home/flask/app/datasource
   depends_on:
     - redis
     - postgres
   links:
     - redis
     - postgres

   environment:
     URL: 'http://192.168.101.26:80'
     PYTHONASYNCIODEBUG: 1

   deploy:
     mode: replicated
     replicas: 1

 sub:
   build: ./subscriber
   restart: always
   expose:
     - "8003"
   volumes:
     - ./subscriber:/home/flask/app/subscriber
   depends_on:
     - redis
     - postgres
   links:
     - redis
     - postgres

   environment:
     URL: 'http://192.168.101.26:80'
     PYTHONASYNCIODEBUG: 1

   deploy:
     mode: replicated
     replicas: 1


 auto:
   build: ./autocontrol
   restart: always
   expose:
     - "8004"
   volumes:
     - ./autocontrol:/home/flask/app/autocontrol
   depends_on:
     - redis
     - postgres
   environment:
     URL: 'http://192.168.101.26:80'
     PYTHONASYNCIODEBUG: 1
   deploy:
     mode: replicated
     replicas: 1

 nginx:
   build: nginx/
   restart: always
   ports:
     - "80:80"
   deploy:
     mode: replicated
     replicas: 1
   depends_on:
     - flaskapp

 postgres:
   restart: always
   image: postgres:alpine
   volumes:
     - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
     - ./postgres/data:/var/lib/postgresql/data
   environment:
     POSTGRES_PASSWORD: eamon2hussien
     POSTGRES_DB: hydrodb
   expose:
     - "5432"
